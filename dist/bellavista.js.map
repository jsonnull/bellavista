{"version":3,"names":[],"mappings":"","sources":["bellavista.js"],"sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bellavista = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _storeEs6 = require('./store.es6');\n\nvar _providerEs6 = require('./provider.es6');\n\nvar _dataEs6 = require('./data.es6');\n\nvar _modelEs6 = require('./model.es6');\n\nvar _viewEs6 = require('./view.es6');\n\nvar _controllerEs6 = require('./controller.es6');\n\nvar _routerEs6 = require('./router.es6');\n\nvar _utilEs6 = require('./util.es6');\n\nvar Bellavista = (function () {\n    function Bellavista() {\n        _classCallCheck(this, Bellavista);\n\n        this.components = new _storeEs6.Store();\n        this.routes = new _storeEs6.Store();\n    }\n\n    _createClass(Bellavista, [{\n        key: 'data',\n        value: function data(name, deps, func) {\n            new _providerEs6.Service(this.components, name, func, { deps: deps });\n        }\n    }, {\n        key: 'model',\n        value: function model(name, deps, func) {\n            new _providerEs6.Factory(this.components, name, func, { deps: deps });\n        }\n    }, {\n        key: 'view',\n        value: function view(name, deps, func) {\n            new _providerEs6.Factory(this.components, name, func, { deps: deps });\n        }\n    }, {\n        key: 'controller',\n        value: function controller(name, deps, func) {\n            new _providerEs6.Service(this.components, name, func, { deps: deps });\n        }\n    }, {\n        key: 'route',\n        value: function route(name, deps, func) {\n            new _providerEs6.Factory(this.routes, name, func, { deps: deps, dependencyStore: this.components });\n        }\n    }], [{\n        key: 'match',\n\n        // This function determines whether a given request matches a route\n        value: function match(route, req) {\n            return req.url == route;\n        }\n    }]);\n\n    return Bellavista;\n})();\n\nfunction bellavista() {\n    return new Bellavista();\n}\n\nexports['default'] = global.bellavista = bellavista;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./controller.es6\":2,\"./data.es6\":3,\"./model.es6\":4,\"./provider.es6\":5,\"./router.es6\":6,\"./store.es6\":7,\"./util.es6\":8,\"./view.es6\":9}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Controller = function Controller(store, name, cons, deps) {\n    _classCallCheck(this, Controller);\n};\n\nexports.Controller = Controller;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Data = function Data(store, name, cons, deps) {\n    _classCallCheck(this, Data);\n};\n\nexports.Data = Data;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Model = function Model(store, name, cons, deps) {\n    _classCallCheck(this, Model);\n};\n\nexports.Model = Model;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nvar _bind = Function.prototype.bind;\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilEs6 = require('./util.es6');\n\n/*\n * Bellavista providers are healivy inspired by the providers in Angular\n */\n\n/*\n * A provider is an object with a get method\n */\n\nvar Provider = function Provider(store, name, obj, opts) {\n    _classCallCheck(this, Provider);\n\n    // Set default options and override\n    var _opts$dependencyStore = opts.dependencyStore;\n    var dependencyStore = _opts$dependencyStore === undefined ? store : _opts$dependencyStore;\n    var _opts$deps = opts.deps;\n    var deps = _opts$deps === undefined ? [] : _opts$deps;\n    var layer = opts.layer;\n\n    this.dependencyStore = dependencyStore;\n    this.deps = deps;\n    this.layer = layer;\n\n    store.set(name, obj);\n};\n\nexports.Provider = Provider;\n\n/*\n * A factory is a provider with a get method that returns the object\n */\n\nvar Factory = (function (_Provider) {\n    function Factory(store, name, cons, opts) {\n        _classCallCheck(this, Factory);\n\n        // Set default options and override\n        var _opts$dependencyStore2 = opts.dependencyStore;\n        var dependencyStore = _opts$dependencyStore2 === undefined ? store : _opts$dependencyStore2;\n        var _opts$deps2 = opts.deps;\n        var deps = _opts$deps2 === undefined ? [] : _opts$deps2;\n\n        // Create a new object for the provider with a get method\n        var obj = {};\n        obj.get = function () {\n\n            // Inject dependencies on every new factory object\n            deps.forEach(function (name, index) {\n                deps[index] = dependencyStore.get(name);\n            });\n\n            // Call the constructor and return the new object\n            return new (_bind.apply(cons, [null].concat(_toConsumableArray(deps))))();\n        };\n\n        // Provider class stores additional information\n        _get(Object.getPrototypeOf(Factory.prototype), 'constructor', this).call(this, store, name, obj, opts);\n    }\n\n    _inherits(Factory, _Provider);\n\n    return Factory;\n})(Provider);\n\nexports.Factory = Factory;\n\n/*\n * Service is a factory that acquires the constructed singleton upon creation\n */\n\nvar Service = (function (_Factory) {\n    function Service(store, name, cons, opts) {\n        _classCallCheck(this, Service);\n\n        // Ignore options, they're not needed by the service class\n\n        // Defer creation until the first time the service is retrieved\n        var service = null;\n\n        // The factory object will call this constructor function, initializing\n        // the service the first time it is injected. Subsequent injections just\n        // return the stored service\n        var factoryFunction = function factoryFunction(the_deps) {\n\n            // If service hasn't been created yet, do so now\n            if (service == null) {\n                service = new cons(the_deps);\n            }\n\n            return service;\n        };\n\n        // The factory class will call the constructor\n        _get(Object.getPrototypeOf(Service.prototype), 'constructor', this).call(this, store, name, cons, opts);\n    }\n\n    _inherits(Service, _Factory);\n\n    return Service;\n})(Factory);\n\nexports.Service = Service;\n\n},{\"./util.es6\":8}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Router = function Router(store, name, cons, deps) {\n    _classCallCheck(this, Router);\n};\n\nexports.Router = Router;\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Store = (function () {\n\n    // Initialize the store\n\n    function Store() {\n        _classCallCheck(this, Store);\n\n        // Holds all modules for the app\n        this.dict = {};\n    }\n\n    _createClass(Store, [{\n        key: \"set\",\n\n        // Instantiate each and store\n        value: function set(name, obj) {\n            this.dict[name] = obj;\n        }\n    }, {\n        key: \"get\",\n\n        // Return the provider from the store\n        value: function get(name) {\n            if (this.dict[name] !== undefined) {\n                return this.dict[name].get();\n            }\n        }\n    }]);\n\n    return Store;\n})();\n\nexports.Store = Store;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Util = (function () {\n    function Util() {\n        _classCallCheck(this, Util);\n    }\n\n    _createClass(Util, null, [{\n        key: 'isArray',\n        value: function isArray(arr) {\n            return Object.prototype.toString.call(someVar) === '[object Array]';\n        }\n    }]);\n\n    return Util;\n})();\n\nexports.Util = Util;\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar View = function View(store, name, cons, deps) {\n    _classCallCheck(this, View);\n};\n\nexports.View = View;\n\n},{}]},{},[1])(1)\n});"],"file":"bellavista.js","sourceRoot":"/source/"}